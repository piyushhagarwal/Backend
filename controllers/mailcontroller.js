require("dotenv").config();
const nodemailer = require("nodemailer");
const Mailgen = require("mailgen");

exports.sendMail = (req, res) => {
  // Create a transporter object using SMTP transport
  const transporter = nodemailer.createTransport({
    service: "gmail",
    auth: {
      user: process.env.MAIL_ID, // Replace with your Gmail email address
      pass: process.env.PASS, // Replace with your Gmail email password
    },
  });

  // Define the email options
  const mailOptions = {
    from: "piyush.agarwal24.pa@gmail.com", // Replace with your Gmail email address
    to: `${req.body.email}`, // Replace with recipient email address
    subject: "Welcome to Give a Pad", // Replace with subject of your email
    html: `<h4>Hello </h4><p>We are thrilled to welcome you to our period pad donation website. We understand the challenges that come with menstruation, especially for those who may not have access to adequate hygiene products. That's why we are committed to making a difference by providing a platform where people can donate period pads to those in need.</p><p>We believe that access to menstrual products is a fundamental right, and our mission is to ensure that nobody has to go without. With your support, we can make a positive impact in the lives of many people who are facing menstrual hygiene challenges.</p><p>Thank you for joining us on this journey, and we look forward to working with you to create a world where menstruation is no longer a barrier to education, health, and overall well-being.</p><p>Warm regards,</p><p>Piyush Agarwal (Give a pad)</p>`,
  };

  // Send the email
  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      res.status(400).json({ Error: error });
    } else {
      res.status(200).json({ "Email sent successfully": info.response });
    }
  });
};

// exports.sendDeliveryMail = (req, res) => {
//   // Create a transporter object using SMTP transport
//   const transporter = nodemailer.createTransport({
//     service: "gmail",
//     auth: {
//       user: process.env.MAIL_ID, // Replace with your Gmail email address
//       pass: process.env.PASS, // Replace with your Gmail email password
//     },
//   });

//   // Define the email options
//   const mailOptions = {
//     from: "developmentmailvarad@gmail.com", // Replace with your Gmail email address
//     to: `${req.body.email}`, // Replace with recipient email address
//     subject: "Medicines Delivered", // Replace with subject of your email
//     html: `<h4>Hello</h4><p>Your patients medicines are delivered !!! </p><h4>Thank You !!</h4>`, // Replace with the body of your email
//   };

//   // Send the email
//   transporter.sendMail(mailOptions, (error, info) => {
//     if (error) {
//       res.status(400).json({ Error: error });
//     } else {
//       res.status(200).json({ "Email sent successfully": info.response });
//     }
//   });
// };

// exports.sendNotAvail = (req, res) => {
//   // Create a transporter object using SMTP transport
//   const transporter = nodemailer.createTransport({
//     service: "gmail",
//     auth: {
//       user: process.env.MAIL_ID, // Replace with your Gmail email address
//       pass: process.env.PASS, // Replace with your Gmail email password
//     },
//   });

//   // Define the email options
//   const mailOptions = {
//     from: "developmentmailvarad@gmail.com", // Replace with your Gmail email address
//     to: `${req.body.email}`, // Replace with recipient email address
//     subject: "Prescription Generated", // Replace with subject of your email
//     html: `<h4>Hello</h4><p>Your patients medical prescription is generated by hospital please check that at :<a href='http://localhost:3000/consent/${req.body._id}'>Click Here</a><br>But your medicines are not available at hospital's medical store please take screenshot of prescription and click on "NO"</p><h4>Thank You !!</h4>`, // Replace with the body of your email
//   };

//   // Send the email
//   transporter.sendMail(mailOptions, (error, info) => {
//     if (error) {
//       res.status(400).json({ Error: error });
//     } else {
//       res.status(200).json({ "Email sent successfully": info.response });
//     }
//   });
// };
